---

- name: create deployment temporary directory
  file:
    path: "{{ deployment_tmp_directory }}"
    state: directory
    mode: 0750

- name: create local temporary directory
  become: false
  file:
    path: "{{ local_tmp_directory }}"
    state: directory
    mode: 0750
  delegate_to: localhost

- name: 'check host environment'
  include: check_environment.yml

# remove older installations
#
- block:

    - name: detect package name yum  # noqa 303
      shell: |
        yum list installed --noplugins | grep java
      register: java_package
      when: ansible_os_family | lower == "redhat"
      tags:
        - skip_ansible_lint
    # TODO
    # - name: detect package name deb
    #   shell: |
    #     dpkg -l | grep java
    #   register: java_package
    #   changed_when: java_package.rc != 0
    #   failed_when: no
    #   when: ansible_os_family | lower == "debian"

    - name: set fact java_package
      set_fact:
        java_package_name="{{ java_package.stdout.split(' ')[0] }}"
      when: ( java_package is defined and java_package.stdout.split(' ')[0] is defined )

    - name: remove installed java {{ java_package_name }}
      package:
        name: "{{ java_package_name }}"
        state: absent
      when: java_package_name is defined

    - include_tasks: check_environment.yml

  when: (
    java_major_version is defined and (
    not java_installed or
    java_major_version is version_compare(java_version, '!=') ) )

# download and install
#
- block:

    - name: "download java {{ java_download_url | basename }} to local folder"
      become: false
      get_url:
        url: "{{ java_download_url }}"
        dest: "{{ local_tmp_directory }}/{{ java_download_url | basename }}"
        checksum: "{{ java_download_checksum }}"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      # run_once: true # <-- this cannot be set due to multi-arch support
      delegate_to: localhost
      check_mode: false

    - name: propagate java archive
      copy:
        src: "{{ local_tmp_directory }}/{{ java_download_url | basename }}"
        dest: "{{ deployment_tmp_directory }}/{{ java_download_url | basename }}"
        mode: 0755
        owner: root
        group: root

    - name: install java {{ java_download_url | basename }}
      package:
        name: "{{ deployment_tmp_directory }}/{{ java_download_url | basename }}"
        state: present
      register: __java_install
  when: ( not java_installed or
    java_major_version is version_compare(java_version, '<') )

- name: detect JAVA_HOME
  shell: |
    dirname $(dirname $(readlink -f $(command -v javac)))
  ignore_errors: true
  register: __java_home
  tags:
    - java
    - skip_ansible_lint

- name: setting fact for JAVA_HOME
  set_fact:
    java_home: "{{ __java_home.stdout }}"
  when: __java_home is defined

- name: create some directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - /usr/lib/jvm
    - /usr/java

- name: update some java links
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: true
  loop:
    - { src: "{{ java_home }}", dest: /usr/lib/jvm/java }
    - { src: /usr/lib/jvm/java, dest: /usr/java/default }

- name: 'insert custom profile script to define PATH variables'
  template:
    src: 'profile.d/java.sh.j2'
    dest: '/etc/profile.d/java.sh'
    owner: 'root'
    group: 'root'
    mode: '0755'
  tags:
    - java
